import { useState, type JSX } from "react";

export function InputMirror(): JSX.Element {
  const [text, setText] = useState<string>("");

  function handleChange(event: React.ChangeEvent<HTMLInputElement>): void {
    setText(event.target.value);
  }

  const containerStyle: React.CSSProperties = {
    padding: "20px",
    fontFamily: "sans-serif",
  };

  return (
    <div style={containerStyle}>
      <label>
        –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:{" "}
        <input
          type="text"
          value={text}
          onChange={handleChange}
          placeholder="–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å..."
        />
      </label>
      <p>–í—ã –≤–≤–µ–ª–∏: {text || "–Ω–∏—á–µ–≥–æ"}</p>
    </div>
  );
}
// üß† –ü–æ—è—Å–Ω–µ–Ω–∏–µ –ø–æ —Ç–∏–ø–∞–º:

// useState<string>("") ‚Äî —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ö—Ä–∞–Ω–∏—Ç —Å—Ç—Ä–æ–∫—É.

// handleChange –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–≥–æ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ React.ChangeEvent<HTMLInputElement>.

// containerStyle —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ React.CSSProperties.

// –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ ‚Äî JSX.Element.#

// üß© –ó–∞–¥–∞–Ω–∏–µ 2: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–º –≤–≤–æ–¥–∞ (–∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º—ã–π 
// input)
// –¶–µ–ª—å: –û—Å–≤–æ–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø—Ä–∏ –≤–≤–æ–¥–µ —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
// –£—Å–ª–æ–≤–∏–µ
// –°–æ–∑–¥–∞–π—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç InputMirror, –∫–æ—Ç–æ—Ä—ã–π:
// —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ (input);
// —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏;
// –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø–æ–¥ –ø–æ–ª–µ–º —Ç–µ–∫—Å—Ç "–í—ã –≤–≤–µ–ª–∏: <—Ç–µ–∫—Å—Ç>", –∫–æ—Ç–æ—Ä—ã–π –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ 
// –∫–∞–∂–¥–æ–º –≤–≤–æ–¥–µ —Å–∏–º–≤–æ–ª–∞.
// –ü–æ–¥—Å–∫–∞–∑–∫–∞
// –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ö—É–∫:
// const [text, setText] = useState("");
// –ü—Ä–∏–º–µ—Ä –ø–æ–≤–µ–¥–µ–Ω–∏—è
// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –≤ –ø–æ–ª–µ: –ü—Ä–∏–≤–µ—Ç
// –ü–æ–¥ –ø–æ–ª–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è:
// –í—ã –≤–≤–µ–ª–∏: –ü—Ä–∏–≤–µ—Ç